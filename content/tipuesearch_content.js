var tipuesearch = {"pages": [{'title': 'Introduction', 'text': 'Leader:  40723145 (期中自評成績:80) Member:  40723112 (期中自評成績:63) \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0  40723120 (期中自評成績:75) \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0  40723144 (期中自評成績:75) \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0  40723147 (期中自評成績:80) \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0  40723150 (期中自評成績:80) 本倉儲位於:\xa0\xa0 https://github.com/mdecp2018/finalproject-ag3 \xa0', 'tags': '', 'url': 'Introduction.html'}, {'title': 'Topic', 'text': 'CMSimfly上加入 tipue search 功能 如此一來便可以提升閱讀效率 更可使閱讀更隨心所欲 參考資料： Tipuesearch 、  Quora', 'tags': '', 'url': 'Topic.html'}, {'title': 'Synopsis', 'text': 'CMSifly 在崁入\xa0TinyMCE4 執行文字內容編輯的網際內容管理系統', 'tags': '', 'url': 'Synopsis.html'}, {'title': 'CMSimfly', 'text': 'CMSifly 是利用 Beatifulsoup4 對 config/content.html 進行分頁後，用 TinyMCE4 進行文字內容編輯，進行網際內容管理。 我們在近端內容管理系統裡面加入Tipuesearch 功能', 'tags': '', 'url': 'CMSimfly.html'}, {'title': 'Beautiful Soup', 'text': 'Beautifulsoup 主要功能是把 HTML 或 XML 的文件提取到 Python 的程式庫。它能夠通過你喜歡的轉換器實現慣用的文檔導航、查詢、修改檔案的方式。 Beautifulsoup \xa0 可以提高你的工作效率。 舉例： 如果你的檔案在 Python 2.7 和\xa0 Python 3.2 中執行，執行完的結果是一樣的。 為什麼用 Beautiful Soup 可以提高效率? Beautiful Soup 對文檔的解析速度不會比它所依賴的解析器（ \xa0 html5lib 或 Python ）更快。如果對計算時間要求很高或需要較快的速度讀取檔案，那麽就應該直接使用\xa0 lxml\xa0 \xa0 換句話說,還有提高 Beautiful Soup 效率的辦法，就是使用 lxml 當作解析器。Beautiful Soup 用 lxml 做解析器比用 html5lib 或 Python 內置解析器速度快很多. \xa0 安裝 cchardet 後文檔的解碼的編碼檢測會速度更快 \xa0 解析部分文檔不會節省多少解析時間，但是會節省很多記憶體的使用 ，並且搜索時也會變得更快。', 'tags': '', 'url': 'Beautiful Soup.html'}, {'title': 'TinyMCE4', 'text': 'TinyMCE4 是一個可以網路應用上的文字編輯器 如何將 TinyMCE4 崁入? Step 1 :\xa0 插入 TinyMCE4 的腳本 <head> 在HTML頁面中插入這行程式 碼並鏈接到 tinymce.min.js 文件： \n \n \n <script src="./../static/tinymce4/tinymce/tinymce.min.js"></script> \n Tips：Step 2 包含 HTML 完整的程式碼。 \n Step 2 : 將 TinyMCE 初始化為 Web 表單的一部分 \n \n \n 使用包含的腳本，在網頁中的任何元素（或元素）上初始化 TinyMCE。 由於 TinyMCE 允許通過 CSS 選擇器識別可替換元素，因此唯一的要求是傳遞包含選擇的對象\xa0tinymce.init(\xa0 )。 在這個例子中，取代\xa0 <textarea id=\'mytextarea\'> 由選擇通過與 TinyMCE 的編輯器實例 \'#mytextarea\' 來 tinymce.init() 。 \n \n \n <!DOCTYPE html>\n<html>\n<head>\n  <script src=\'http://cloud.tinymce.com/5-testing/tinymce.min.js\'></script>\n  <script>\n  tinymce.init({\n    selector: \'#mytextarea\'\n  });\n  </script>\n</head>\n\n<body>\n<h1>TinyMCE Quick Start Guide</h1>\n  <form method="post">\n    <textarea id="mytextarea">Hello, World!</textarea>\n  </form>\n</body>\n</html> \n \n Step 3 : 用 POST 表單儲存內容 當<form>被提交後，TinyMCE 的編輯器模仿一個普通的 HTML 行為\xa0 <textarea> 過程中\xa0 POST  。在用戶的表單處理程序中，提交的內容可以與從常規創建的內容相同的方式處理\xa0 <textarea> 。 這就是它的全部！ 要下載 TinyMCE 並在本地 安裝 ，“\xa0 簡介和入門 指南”\xa0中的“\xa0高級安裝選擇”頁面有說明。本文檔還提供了有關 TinyMCE 功能的信息，例如高級安裝選項，使用插件，學習內容過濾和拼寫檢查。 資料來源 :\xa0  TinyMCE', 'tags': '', 'url': 'TinyMCE4.html'}, {'title': 'Report', 'text': 'Final Report', 'tags': '', 'url': 'Report.html'}, {'title': 'Final video', 'text': '李冠廷(40723112) 林靖浩(40723120) 廖豪樹(40723144) 劉光智(40723145) 蔡博宇(40723147) 簡國龍(40723150)', 'tags': '', 'url': 'Final video.html'}, {'title': 'Python 語法', 'text': 'Python 3 官方教材:\xa0 https://docs.python.org/3/index.html \xa0 Python tutorial:\xa0 https://docs.python.org/3/tutorial/index.html \xa0(英文) Python 教學:\xa0 https://python-doc-tw.github.io/tutorial/index.html \xa0 網頁上的 Python - Brython:\xa0 https://www.brython.info/static_doc/en/intro.html \xa0 (解譯式) 網頁上的 Python GUI- Flexx:\xa0 https://flexx.readthedocs.io/en/stable/ \xa0(轉譯式) \n \n \n  for ggame  \n \n \n \n \n  Cango 程式庫  \n \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n  導入 ace  \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n 開始練習 print() 用法, 並著手建立函式  印出版次與關鍵字程式  \n \n  用來顯示程式碼的 editor 區域   以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  Filename:  .py   Run   Output   清除 Reload  ****************************** keyword start  \n \n  ****************************** keyword end   ***************************** slide ex1 start  \n \n  ***************************** slide ex1 end   ***************************** slide ex2 start  \n \n  ***************************** slide ex2 end   ***************************** slide ex3 start  \n \n', 'tags': '', 'url': 'Python 語法.html'}]};